<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Voice Quizs</title>
    <link rel="stylesheet" href="/css/styles.css" />
</head>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>



<body>
    <div class="topnav">
        <a href="/">Users</a>
        <a href="/skill">Skills</a>
        <a href="/topic">Topics</a>
        <a href="/lesson">Lessons</a>
        <a class="active" href="/voiceQuiz">Voice Quizs</a>
        <a href="/multipleChoiceQuiz">Multiple Choice Quizs</a>
        <a href="/descriptionQuiz">Description Quizs</a>
        <a href="/lettersIntoWordsQuiz">Letters Into Words Quizs</a>
    </div>

    <div class="tooltip">
        <!-- Nút import -->
        <label for="fileInput-data" class="import-btn-data">Import</label>
        <!-- Input file ẩn để chọn tệp -->
        <input type="file" id="fileInput-data" style="display: none" accept=".xlsx, .xls">
        <!-- Tooltip -->
        <pre class="tooltiptext">
Import dữ liệu vào từ file excell, định dạng trong file như sau:
Lưu ý: dòng đầu tiên chỉ là nhãn, không mang giá trị lưu trữ
        </pre>
        <div class="tooltip tooltip-imageVoiceQuiz">
            <span class="tooltiptext"></span>
        </div>
    </div>

    <div class="tooltip">
        <label for="fileInput-for-lesson" class="import-btn-for-lesson">Import for Lesson</label>
    </div>

    <div>
        <a class="btnCreate" href="/create-voiceQuiz">Create A New Voice Quiz</a>
    </div>

    <div>
        <!-- Filter 1 -->
        <label style="margin-left: 35px;" for="filter1">Lesson:</label>
        <select id="filter1" onchange="getVoiceQuizByLessonID(this.value)">
            <option value="all">All</option>
            <% listLessonOfSpeaking.forEach(function(lesson) { %>
                <option value="<%= lesson.id %>">
                    <%= lesson.name %>
                </option>
                <% }); %>
        </select>
    </div>

    </div>

    <div style="padding-top: 30px;" class="table-container">
        <table id="voiceQuizTable">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Answer</th>
                    <th>Meaning</th>
                    <th style="text-align: center;">Actions</th>
                </tr>
            </thead>
            <tbody>
                <!-- Dữ liệu sẽ được thêm bằng JavaScript -->
                <% listVoiceQuiz.forEach(function(voiceQuiz, index) { %>
                    <tr>
                        <td>
                            <%= voiceQuiz.id %>
                        </td>
                        <td>
                            <%= voiceQuiz.answer %>
                        </td>
                        <td>
                            <%= voiceQuiz.meaning %>
                        </td>
                        <td style="width: 300px;">
                            <div class="container_btn">
                                <div class="btn">
                                    <a class="btnEdit" href="/update-voiceQuiz/<%= voiceQuiz.id %>">Edit</a>
                                </div>
                                <!-- <div class="btn">
                                    <button class="btnDelete" data-answer="<%= voiceQuiz.answer %>"
                                        data-meaning="<%= voiceQuiz.meaning %>"
                                        data-id="<%= voiceQuiz.id %>">Delete</button>
                                </div> -->
                            </div>
                        </td>
                    </tr>
                    <% }); %>
            </tbody>
        </table>
    </div>
    <!-- Form để chọn Topic và Lesson -->
    <div id="importDialog" class="modal" style="display:none;">
        <div class="modal-content">
            <span class="close">&times;</span>
            <h2>Import for Lesson</h2>
            <div class="input-group">
                <label for="topicSelect">Select Topic:</label>
                <select style="margin: 8px; width: 200px; margin-left: 10px;" name="topic_id" id="topicSelect">
                    <% listTopicSpeakingUnduplicated.forEach(function(topicSpeaking, index) { %>
                        <option value="<%= topicSpeaking.id %>">
                            <%= topicSpeaking.name %>
                        </option>
                        <% }); %>
                </select>
            </div>
            <div class="input-group" id="lessonGroup" style="display: none;">
                <label for="lessonSelect">Select Lesson:</label>
                <select id="lessonSelect" name="lesson_id">
                    <!-- Options sẽ được thêm bằng JavaScript -->
                </select>
            </div>
            <div style="margin-top: 15px;">
                <label style="margin-left: 10px;" for="lessonFileInput">Choose Excel File:</label>
                <input style="margin-left: 10px; margin-top: 20px;" type="file" id="lessonFileInput"
                    accept=".xlsx, .xls">
            </div>
            <div>
                <button class="btn-imporrt" id="importLessonBtn">Import</button>
            </div>
        </div>
    </div>
    <script>
        let idLessonCurrent = 0;
        let nameLessonCurrent = '';

        // lọc
        function getVoiceQuizByLessonID(lessonId) {
            idLessonCurrent = lessonId
            //alert(idLessonCurrent);
            let url
            if (lessonId === 'all') {
                // get all lesson by speaking
                url = 'api/getAllVoiceQuiz';
                // Gửi yêu cầu API để lấy danh sách bài học dựa trên topicId
                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        if (data.message === 'OK') {
                            const voiceQuizzes = data.data;

                            const tableBody = document.querySelector('#voiceQuizTable tbody');
                            // Xóa hết các hàng cũ trong bảng
                            tableBody.innerHTML = '';

                            // Duyệt qua danh sách voice quiz và thêm vào bảng
                            voiceQuizzes.forEach(voiceQuiz => {
                                const row = document.createElement('tr');
                                row.innerHTML = `
                                                <td>${voiceQuiz.id}</td>
                                                <td>${voiceQuiz.answer}</td>
                                                <td>${voiceQuiz.meaning}</td>
                                                <td style="width: 300px;">
                                                    <div class="container_btn">
                                                        <div class="btn">
                                                            <a class="btnEdit" href="/update-voiceQuiz/${voiceQuiz.id}">Edit</a>
                                                        </div>
                                                    </div>
                                                </td>
                                            `;
                                tableBody.appendChild(row);
                            });
                        } else {
                            console.error('Error:', data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            } else {
                url = `api/getAllVoiceQuizByLessonId/${lessonId}`;
                // Gửi yêu cầu API để lấy danh sách bài học dựa trên topicId
                fetch(url)
                    .then(response => response.json())
                    .then(data => {
                        if (data.message === 'OK') {
                            const voiceQuizzes = data.data;
                            updateVoiceQuizTable(voiceQuizzes);
                        } else {
                            console.error('Error:', data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                    });
            }
        }
        function updateVoiceQuizTable(voiceQuizzes) {
            const tableBody = document.querySelector('#voiceQuizTable tbody');
            // Xóa hết các hàng cũ trong bảng
            tableBody.innerHTML = '';

            // Duyệt qua danh sách voice quiz và thêm vào bảng
            voiceQuizzes.forEach(voiceQuiz => {
                const row = document.createElement('tr');
                row.innerHTML = `
            <td>${voiceQuiz.id}</td>
            <td>${voiceQuiz.answer}</td>
            <td>${voiceQuiz.meaning}</td>
            <td style="width: 300px;">
                <div class="container_btn">
                    <div class="btn">
                        <a class="btnEdit" href="/update-voiceQuiz/${voiceQuiz.id}">Edit</a>
                    </div>
                    <div class="btn">
                        <button class="btnDelete" data-answer="${voiceQuiz.answer}" data-meaning="${voiceQuiz.meaning}" data-id="${voiceQuiz.id}">Delete</button>
                    </div>
                </div>
            </td>
        `;
                tableBody.appendChild(row);
            });
        }
        // delete
        $(document).ready(function () {
            document.addEventListener('click', function (event) {
                if (event.target.matches('.btnDelete')) {
                    const id = $(event.target).attr('data-id');
                    const answer = $(event.target).attr('data-answer');
                    const meaning = $(event.target).attr('data-meaning');
                    if (confirm(`Xóa câu hỏi ${answer} ý nghĩa ${meaning} ra khỏi bài học ${idLessonCurrent}`)) {
                        $.ajax({
                            url: `${window.location.origin}/api/delete-voiceQuiz-fromLESSON_VOICE_QUIZ/${id}/${idLessonCurrent}`,
                            method: "DELETE",
                            // data: JSON.stringify({ id: id, lessonId: idLessonCurrent }),
                            // contentType: 'application/json',
                            success: (result) => {
                                console.log(result);
                                $(event.target).closest("tr").remove();
                                alert(`Đã xóa ${answer} ý nghĩa ${meaning} ra khỏi bài học ${idLessonCurrent}`);
                            },
                            error: function (error) {
                                alert(`Lỗi`);
                            }
                        });
                    } else {
                        // Do nothing!
                    }
                }
            });
        });
        // import data
        $(document).ready(function () {
            // Xử lý sự kiện khi người dùng chọn tệp Excel
            $('#fileInput-data').change(function (e) {
                var file = e.target.files[0];
                if (file) {
                    var reader = new FileReader();
                    reader.onload = function (e) {
                        var data = new Uint8Array(e.target.result);
                        var workbook = XLSX.read(data, { type: 'array' });
                        var sheetName = workbook.SheetNames[0];
                        var worksheet = workbook.Sheets[sheetName];
                        var jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
                        //alert(JSON.stringify({ data: jsonData }))
                        // Gửi dữ liệu lên server
                        $.ajax({
                            url: '/api/create-VoiceQuiz',
                            method: 'POST',
                            contentType: 'application/json',
                            data: JSON.stringify({ data: jsonData }), // Dữ liệu từ tệp Excel
                            success: function (response) {
                                console.log(response);
                                if (response.message === 'OK') {
                                    alert('Thêm thành công!');
                                }
                                else if (response.message === 'Missing required params') {
                                    alert('File excell đang sai định dạng');
                                }
                                else {
                                    alert('Thêm thất bại!');
                                }
                                window.location.reload(true);
                            },
                            error: function (error) {
                                console.error('Error:', error);
                                alert('Thêm thất bại!');
                                window.location.reload(true);
                            }
                        });
                    };
                    reader.readAsArrayBuffer(file);
                }
            });
        });
        // import for lesson
        var topicId;
        var lessonId;
        // Xử lý khi nhấn nút "Import for Lesson"
        $(document).ready(function () {
            $(".import-btn-for-lesson").click(function () {
                $("#importDialog").css("display", "block");
            });
        });

        // Xử lý khi nhấn nút "Close" trên dialog
        $(document).ready(function () {
            $(".close").click(function () {
                $("#importDialog").css("display", "none");
                window.location.reload(true);
            });
        });
        // Thêm sự kiện change cho select topic
        document.getElementById('topicSelect').addEventListener('change', function () {
            var selectedTopicId = this.value;
            if (this.selectedIndex === 0) { // Nếu option đầu tiên được chọn
                loadLessons(); // Gọi hàm loadLessons để tải danh sách chủ đề
            }
            else {
                loadLessons();
            }
        });

        // Hàm tải danh sách Lesson
        function loadLessons() {
            var selectedTopic = document.getElementById('topicSelect').value; // id topic
            topicId = selectedTopic;
            //alert(selectedTopic);// Lấy giá trị của topic được chọn
            fetch(`api/lessons/${selectedTopic}/2`) // Gọi API để lấy danh sách Lesson dựa trên Topic được chọn
                .then(response => response.json())
                .then(data => {
                    if (data.message === 'OK') {
                        var lessons = data.data;
                        //alert(JSON.stringify(lessons))
                        var lessonSelect = document.getElementById('lessonSelect');
                        lessonSelect.innerHTML = ''; // Xóa các option cũ
                        lessons.forEach(function (lesson, index) {
                            // Tạo một option mới
                            var option = document.createElement('option');
                            option.value = lesson.id; // Giá trị của option là id của lesson
                            option.textContent = lesson.name; // Nội dung của option là tên của lesson
                            option.setAttribute('data-index', index + 1); // Đặt thuộc tính data-index cho option là index + 1
                            lessonSelect.appendChild(option); // Thêm option vào select
                        });
                        document.getElementById('lessonGroup').style.display = 'block'; // Hiển thị select chủ đề
                    } else {
                        console.error('Error:', data.message);
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        }
        loadLessons();
        // Xử lý khi nhấn nút "Import" trên dialog
        $(document).ready(function () {
            // Xử lý sự kiện khi người dùng chọn tệp Excel
            $("#importLessonBtn").click(function () {
                var topicId = $("#topicSelect").val();
                var lessonId = $("#lessonSelect").val();
                var file = $("#lessonFileInput")[0].files[0];

                if (!topicId || !lessonId || !file) {
                    alert("Please select a Topic, a Lesson, and choose an Excel file.");
                    return;
                }

                var reader = new FileReader();
                reader.onload = function (e) {
                    var data = new Uint8Array(e.target.result);
                    var workbook = XLSX.read(data, { type: 'array' });
                    var sheetName = workbook.SheetNames[0];
                    var worksheet = workbook.Sheets[sheetName];
                    var jsonData = XLSX.utils.sheet_to_json(worksheet, { header: 1 });
                    // alert(JSON.stringify({ data: jsonData }))
                    // Gửi dữ liệu lên server
                    $.ajax({
                        url: '/api/create-LessonVoiceQuiz',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify({ topicId: topicId, lessonId: lessonId, data: jsonData }),
                        success: function (response) {
                            console.log(response);
                            if (response.message === 'OK') {
                                alert('Thêm thành công!');
                            }
                            else if (response.message === 'Missing required params') {
                                alert('File excell đang sai định dạng');
                            }
                            else {
                                alert('Thêm thất bại!');
                            }
                            // Đóng dialog sau khi hoàn thành
                            $("#importDialog").css("display", "none");
                            window.location.reload(true);
                        },
                        error: function (error) {
                            console.error('Error:', error);
                            alert('Thêm thất bại!');
                            // Đóng dialog sau khi hoàn thành
                            $("#importDialog").css("display", "none");
                            window.location.reload(true);
                        }
                    });
                };
                reader.readAsArrayBuffer(file);
            });
        });
    </script>
</body>

</html>